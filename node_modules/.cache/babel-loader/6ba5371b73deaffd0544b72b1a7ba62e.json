{"ast":null,"code":"import * as actionTypes from \"../action/actionTypes\";\nconst initialState = {\n  admin: {\n    username: \"admin\",\n    password: \"admin\"\n  },\n  users: [{\n    name: \"arnov\",\n    username: \"arnov\",\n    password: 'arnov',\n    saldo: 1000000\n  }],\n  signinResponse: false,\n  signedUser: {},\n  books: [],\n  book: {},\n  booksInCart: [],\n  totalOrder: 1,\n  PriceCart: 0\n};\n\nconst book = (state = initialState, action) => {\n  // console.log(state.users, 'state useres')\n  switch (action.type) {\n    case actionTypes.SIGNUP:\n      return { ...state,\n        users: [...state.users, action.payload]\n      };\n\n    case actionTypes.SIGNIN:\n      const findUser = state.users.find(user => user.username === action.payload.username && user.password === action.payload.password) ? true : false;\n      const filterUser = state.users.filter(user => user.username === action.payload.username && user.password === action.payload.password);\n      return { ...state,\n        signinResponse: findUser,\n        signedUser: filterUser\n      };\n\n    case actionTypes.SIGNOUT:\n      return { ...state,\n        signinResponse: false,\n        signedUser: {},\n        booksInCart: []\n      };\n\n    case actionTypes.ADD_TO_CART:\n      console.log(\"action.payload\", action.payload);\n      const filterProduct = state.books.filter(val => val.id === action.payload.id);\n      filterProduct[0].qty = 1;\n      return { ...state,\n        booksInCart: [...state.booksInCart, filterProduct[0]]\n      };\n    // handdle add chart unique\n    // let temp = state.booksInCart.length > 0 ? state.booksInCart : []\n    // const indexAddCart = temp.findIndex((val) => val.id === action.payload.id)\n    // if(indexAddCart >= 0) {\n    //   temp[indexAddCart].qty = temp[indexAddCart].qty + 1\n    // } else {\n    //   const findproduct = state.books.find((val) => val.id === action.payload.id);\n    //   temp.push({...findproduct, qty : 1})\n    // }\n    // return {\n    //   ...state,\n    //   booksInCart: temp,\n    //   };\n\n    case actionTypes.PRICE_CART:\n      return { ...state,\n        PriceCart: action.payload\n      };\n\n    case actionTypes.PLUS_ORDER: // addOrder by totlaOrder\n\n    case actionTypes.MINUS_ORDER:\n      if (state.totalOrder > 0) {\n        return { ...state,\n          booksInCart: state.totalOrder + 1\n        };\n      }\n\n    // add order by each id, qty\n    // const index = state.booksInCart.findIndex(val => val.id === action.payload)\n    // const newBooksInCart = state.booksInCart\n    // newBooksInCart[index].qty = state.booksInCart[index].qty + 1\n    // // console.log(\"action.payload qty\", action.payload);\n    // console.log(newBooksInCart[index].qty)\n    // return {\n    //   ...state,\n    //   booksInCart : newBooksInCart\n    // }\n\n    case actionTypes.MINUS_ORDER:\n      if (state.totalOrder > 0) {\n        return { ...state,\n          booksInCart: state.totalOrder - 1\n        };\n      }\n\n    case actionTypes.UPDATE_SALDO:\n      let newPayloadsaldo = signedUser.saldo;\n\n      if (newsignedUser >= 0) {}\n\n      return { ...state,\n        signedUser: newsignedUser\n      };\n    //setAdminBook\n\n    case actionTypes.GET_BOOK:\n      return { ...state,\n        books: action.payload\n      };\n\n    case actionTypes.GET_BOOK_BY_ID:\n      return { ...state,\n        book: action.payload\n      };\n\n    case actionTypes.UPDATE_BOOK:\n      return { ...state\n      };\n\n    case actionTypes.DELETE_BOOK:\n      return { ...state\n      };\n\n    default:\n      return initialState;\n  }\n};\n\nexport default book;","map":{"version":3,"sources":["/home/kemosabe/Documents/sekolahfullstack/react/projectNext/src/redux/reducer/globalReducer.js"],"names":["actionTypes","initialState","admin","username","password","users","name","saldo","signinResponse","signedUser","books","book","booksInCart","totalOrder","PriceCart","state","action","type","SIGNUP","payload","SIGNIN","findUser","find","user","filterUser","filter","SIGNOUT","ADD_TO_CART","console","log","filterProduct","val","id","qty","PRICE_CART","PLUS_ORDER","MINUS_ORDER","UPDATE_SALDO","newPayloadsaldo","newsignedUser","GET_BOOK","GET_BOOK_BY_ID","UPDATE_BOOK","DELETE_BOOK"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../action/actionTypes\";\n\nconst initialState = {\n  admin: { username: \"admin\", password: \"admin\" },\n  users: [{name: \"arnov\", username: \"arnov\", password : 'arnov', saldo : 1000000}],\n  signinResponse: false,\n  signedUser: {},\n  books: [],\n  book: {},\n  booksInCart: [],\n  totalOrder : 1,\n  PriceCart : 0\n};\n\nconst book = (state = initialState, action) => {\n  // console.log(state.users, 'state useres')\n  switch (action.type) {\n    case actionTypes.SIGNUP:\n      return {\n        ...state,\n        users: [...state.users, action.payload],\n      };\n      \n    case actionTypes.SIGNIN:\n      const findUser = state.users.find(\n        (user) =>\n        user.username === action.payload.username &&\n        user.password === action.payload.password\n        )\n        ? true\n        : false;\n\n      const filterUser = state.users.filter(\n        (user) =>\n        user.username === action.payload.username &&\n        user.password === action.payload.password\n        );\n        \n        return {\n          ...state,\n          signinResponse: findUser,\n          signedUser: filterUser,\n        };\n        \n      case actionTypes.SIGNOUT:\n        return {\n           ...state,\n          signinResponse: false,\n          signedUser: {},\n          booksInCart: []\n          };\n          \n          \n          case actionTypes.ADD_TO_CART:\n            console.log(\"action.payload\", action.payload);\n            const filterProduct = state.books.filter((val) => val.id === action.payload.id);\n            filterProduct[0].qty = 1\n            return {\n              ...state,\n              booksInCart: [...state.booksInCart, filterProduct[0]]\n            };\n\n                // handdle add chart unique\n              // let temp = state.booksInCart.length > 0 ? state.booksInCart : []\n              // const indexAddCart = temp.findIndex((val) => val.id === action.payload.id)\n              // if(indexAddCart >= 0) {\n                //   temp[indexAddCart].qty = temp[indexAddCart].qty + 1\n              // } else {\n              //   const findproduct = state.books.find((val) => val.id === action.payload.id);\n              //   temp.push({...findproduct, qty : 1})\n              // }\n\n              // return {\n              //   ...state,\n              //   booksInCart: temp,\n              //   };\n            \n    case actionTypes.PRICE_CART :\n      return {\n        ...state,\n      PriceCart : action.payload\n      }\n\n    \n    case actionTypes.PLUS_ORDER:\n      // addOrder by totlaOrder\n      case actionTypes.MINUS_ORDER:\n        if(state.totalOrder > 0 ) {\n        return {\n          ...state,\n          booksInCart : state.totalOrder + 1\n        }\n      }\n\n      // add order by each id, qty\n      // const index = state.booksInCart.findIndex(val => val.id === action.payload)\n      // const newBooksInCart = state.booksInCart\n      // newBooksInCart[index].qty = state.booksInCart[index].qty + 1\n      // // console.log(\"action.payload qty\", action.payload);\n      // console.log(newBooksInCart[index].qty)\n      // return {\n        //   ...state,\n        //   booksInCart : newBooksInCart\n        // }\n        \n      case actionTypes.MINUS_ORDER:\n        if(state.totalOrder > 0 ) {\n        return {\n          ...state,\n          booksInCart : state.totalOrder - 1\n        }\n      }\n\n      case actionTypes.UPDATE_SALDO:\n        let newPayloadsaldo = signedUser.saldo\n        if(newsignedUser >= 0) {\n          \n        }\n        return {\n          ...state,\n          signedUser : newsignedUser \n        }\n\n\n        //setAdminBook\n        case actionTypes.GET_BOOK:\n          return {\n            ...state,\n            books: action.payload,\n          };\n        case actionTypes.GET_BOOK_BY_ID:\n          return {\n            ...state,\n            book: action.payload,\n          };\n        case actionTypes.UPDATE_BOOK:\n          return {\n            ...state,\n          };\n        case actionTypes.DELETE_BOOK:\n          return {\n            ...state,\n          };\n\n        default:\n      return initialState;\n  }\n};\n\nexport default book;\n"]},"metadata":{},"sourceType":"module"}