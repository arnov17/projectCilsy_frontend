{"ast":null,"code":"import React from \"react\";\nimport { combineReducers, compose, createStore, applyMiddleware } from 'redux';\nimport books from './redux/reducer/globalReducer';\nimport thunk from \"redux-thunk\";\nconst rootReducer = combineReducers({\n  bookReducer: books\n});\n\nconst logger = store => {\n  return next => {\n    return action => {\n      console.log('[Middleware] Dispatching', action);\n      const result = next(action);\n      console.log('[Middleware next state]', store.getState());\n      return result;\n    };\n  };\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));","map":{"version":3,"sources":["/home/kemosabe/Documents/sekolahfullstack/react/projectNext/src/redux/store/store.js"],"names":["React","combineReducers","compose","createStore","applyMiddleware","books","thunk","rootReducer","bookReducer","logger","store","next","action","console","log","result","getState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAGA,MAAMC,WAAW,GAAGN,eAAe,CAAC;AAChCO,EAAAA,WAAW,EAAEH;AADmB,CAAD,CAAnC;;AAIE,MAAMI,MAAM,GAAIC,KAAD,IAAW;AACxB,SAAQC,IAAD,IAAU;AACf,WAAQC,MAAD,IAAY;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,MAAxC;AACA,YAAMG,MAAM,GAAGJ,IAAI,CAACC,MAAD,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCJ,KAAK,CAACM,QAAN,EAAvC;AACA,aAAOD,MAAP;AACD,KALD;AAMD,GAPD;AAQD,CATD;;AAWA,MAAME,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CjB,OAAxE;AAEA,MAAMQ,KAAK,GAAGP,WAAW,CACvBI,WADuB,EAEvBU,gBAAgB,CAACb,eAAe,CAACK,MAAD,EAASH,KAAT,CAAhB,CAFO,CAAzB","sourcesContent":["import React from \"react\";\nimport { combineReducers, compose, createStore, applyMiddleware } from 'redux';\nimport books from './redux/reducer/globalReducer'\nimport thunk from \"redux-thunk\";\n\n\nconst rootReducer = combineReducers({\n    bookReducer: books\n  });\n  \n  const logger = (store) => {\n    return (next) => {\n      return (action) => {\n        console.log('[Middleware] Dispatching', action)\n        const result = next(action)\n        console.log('[Middleware next state]', store.getState())\n        return result\n      }\n    }\n  };\n  \n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  \n  const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(logger, thunk))\n  );"]},"metadata":{},"sourceType":"module"}