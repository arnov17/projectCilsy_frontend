{"ast":null,"code":"import * as actionTypes from \"../action/actionTypes\";\nconst initialState = {\n  admin: {\n    username: \"admin\",\n    password: \"admin\"\n  },\n  users: [{\n    name: \"arnov\",\n    username: \"arnov\",\n    password: 'arnov',\n    saldo: 1000000\n  }],\n  signinResponse: false,\n  signedUser: {},\n  books: [],\n  book: {},\n  booksInCart: [],\n  totalOrder: 1\n};\n\nconst book = (state = initialState, action) => {\n  console.log(state.users, 'state useres');\n\n  switch (action.type) {\n    case actionTypes.SIGNUP:\n      return { ...state,\n        users: [...state.users, action.payload]\n      };\n\n    case actionTypes.SIGNIN:\n      const findUser = state.users.find(user => user.username === action.payload.username && user.password === action.payload.password) ? true : false;\n      const filterUser = state.users.filter(user => user.username === action.payload.username && user.password === action.payload.password);\n      return { ...state,\n        signinResponse: findUser,\n        signedUser: filterUser\n      };\n\n    case actionTypes.SIGNOUT:\n      return { ...state,\n        signinResponse: false,\n        signedUser: {}\n      };\n\n    case actionTypes.GET_BOOK:\n      return { ...state,\n        books: action.payload\n      };\n\n    case actionTypes.GET_BOOK_BY_ID:\n      return { ...state,\n        book: action.payload\n      };\n\n    case actionTypes.UPDATE_BOOK:\n      return { ...state\n      };\n\n    case actionTypes.DELETE_BOOK:\n      return { ...state\n      };\n\n    case actionTypes.ADD_TO_CART:\n      console.log(\"action.payload\", action.payload);\n      const filterProduct = state.books.filter(val => val.id === action.payload.id);\n      filterProduct[0].qty = 1;\n      return { ...state,\n        booksInCart: [...state.booksInCart, filterProduct[0]] //booksInCart: state.booksInCart.push(action.payload),\n\n      };\n\n    case actionTypes.PLUS_ORDER:\n      return { ...state,\n        totalOrder: state.totalOrder + 1\n      };\n\n    case actionTypes.MINUS_ORDER:\n      if (state.totalOrder > 0) {\n        return { ...state,\n          totalOrder: state.totalOrder - 1\n        };\n      }\n\n    default:\n      return initialState;\n  }\n};\n\nexport default book;","map":{"version":3,"sources":["/home/kemosabe/Documents/sekolahfullstack/react/projectNext/src/redux/reducer/globalReducer.js"],"names":["actionTypes","initialState","admin","username","password","users","name","saldo","signinResponse","signedUser","books","book","booksInCart","totalOrder","state","action","console","log","type","SIGNUP","payload","SIGNIN","findUser","find","user","filterUser","filter","SIGNOUT","GET_BOOK","GET_BOOK_BY_ID","UPDATE_BOOK","DELETE_BOOK","ADD_TO_CART","filterProduct","val","id","qty","PLUS_ORDER","MINUS_ORDER"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,uBAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,QAAQ,EAAE,OAAZ;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GADY;AAEnBC,EAAAA,KAAK,EAAE,CAAC;AAACC,IAAAA,IAAI,EAAE,OAAP;AAAgBH,IAAAA,QAAQ,EAAE,OAA1B;AAAmCC,IAAAA,QAAQ,EAAG,OAA9C;AAAuDG,IAAAA,KAAK,EAAG;AAA/D,GAAD,CAFY;AAGnBC,EAAAA,cAAc,EAAE,KAHG;AAInBC,EAAAA,UAAU,EAAE,EAJO;AAKnBC,EAAAA,KAAK,EAAE,EALY;AAMnBC,EAAAA,IAAI,EAAE,EANa;AAOnBC,EAAAA,WAAW,EAAE,EAPM;AAQnBC,EAAAA,UAAU,EAAG;AARM,CAArB;;AAWA,MAAMF,IAAI,GAAG,CAACG,KAAK,GAAGb,YAAT,EAAuBc,MAAvB,KAAkC;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACT,KAAlB,EAAyB,cAAzB;;AACA,UAAQU,MAAM,CAACG,IAAf;AACE,SAAKlB,WAAW,CAACmB,MAAjB;AACE,aAAO,EACL,GAAGL,KADE;AAELT,QAAAA,KAAK,EAAE,CAAC,GAAGS,KAAK,CAACT,KAAV,EAAiBU,MAAM,CAACK,OAAxB;AAFF,OAAP;;AAIF,SAAKpB,WAAW,CAACqB,MAAjB;AACE,YAAMC,QAAQ,GAAGR,KAAK,CAACT,KAAN,CAAYkB,IAAZ,CACdC,IAAD,IACEA,IAAI,CAACrB,QAAL,KAAkBY,MAAM,CAACK,OAAP,CAAejB,QAAjC,IACAqB,IAAI,CAACpB,QAAL,KAAkBW,MAAM,CAACK,OAAP,CAAehB,QAHpB,IAKb,IALa,GAMb,KANJ;AAQA,YAAMqB,UAAU,GAAGX,KAAK,CAACT,KAAN,CAAYqB,MAAZ,CAChBF,IAAD,IACEA,IAAI,CAACrB,QAAL,KAAkBY,MAAM,CAACK,OAAP,CAAejB,QAAjC,IACAqB,IAAI,CAACpB,QAAL,KAAkBW,MAAM,CAACK,OAAP,CAAehB,QAHlB,CAAnB;AAMA,aAAO,EACL,GAAGU,KADE;AAELN,QAAAA,cAAc,EAAEc,QAFX;AAGLb,QAAAA,UAAU,EAAEgB;AAHP,OAAP;;AAMF,SAAKzB,WAAW,CAAC2B,OAAjB;AACE,aAAO,EACL,GAAGb,KADE;AAELN,QAAAA,cAAc,EAAE,KAFX;AAGLC,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAOF,SAAKT,WAAW,CAAC4B,QAAjB;AACE,aAAO,EACL,GAAGd,KADE;AAELJ,QAAAA,KAAK,EAAEK,MAAM,CAACK;AAFT,OAAP;;AAIF,SAAKpB,WAAW,CAAC6B,cAAjB;AACE,aAAO,EACL,GAAGf,KADE;AAELH,QAAAA,IAAI,EAAEI,MAAM,CAACK;AAFR,OAAP;;AAIF,SAAKpB,WAAW,CAAC8B,WAAjB;AACE,aAAO,EACL,GAAGhB;AADE,OAAP;;AAGF,SAAKd,WAAW,CAAC+B,WAAjB;AACE,aAAO,EACL,GAAGjB;AADE,OAAP;;AAGF,SAAKd,WAAW,CAACgC,WAAjB;AACEhB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,MAAM,CAACK,OAArC;AACA,YAAMa,aAAa,GAAGnB,KAAK,CAACJ,KAAN,CAAYgB,MAAZ,CAAoBQ,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWpB,MAAM,CAACK,OAAP,CAAee,EAAtD,CAAtB;AACAF,MAAAA,aAAa,CAAC,CAAD,CAAb,CAAiBG,GAAjB,GAAuB,CAAvB;AACA,aAAO,EACL,GAAGtB,KADE;AAELF,QAAAA,WAAW,EAAE,CAAC,GAAGE,KAAK,CAACF,WAAV,EAAuBqB,aAAa,CAAC,CAAD,CAApC,CAFR,CAGL;;AAHK,OAAP;;AAMA,SAAKjC,WAAW,CAACqC,UAAjB;AACE,aAAO,EACL,GAAGvB,KADE;AAELD,QAAAA,UAAU,EAAGC,KAAK,CAACD,UAAN,GAAmB;AAF3B,OAAP;;AAKD,SAAKb,WAAW,CAACsC,WAAjB;AACC,UAAGxB,KAAK,CAACD,UAAN,GAAmB,CAAtB,EAA0B;AACxB,eAAO,EACL,GAAGC,KADE;AAELD,UAAAA,UAAU,EAAGC,KAAK,CAACD,UAAN,GAAmB;AAF3B,SAAP;AAID;;AACL;AACE,aAAOZ,YAAP;AA7EJ;AA+ED,CAjFD;;AAmFA,eAAeU,IAAf","sourcesContent":["import * as actionTypes from \"../action/actionTypes\";\n\nconst initialState = {\n  admin: { username: \"admin\", password: \"admin\" },\n  users: [{name: \"arnov\", username: \"arnov\", password : 'arnov', saldo : 1000000}],\n  signinResponse: false,\n  signedUser: {},\n  books: [],\n  book: {},\n  booksInCart: [],\n  totalOrder : 1\n};\n\nconst book = (state = initialState, action) => {\n  console.log(state.users, 'state useres')\n  switch (action.type) {\n    case actionTypes.SIGNUP:\n      return {\n        ...state,\n        users: [...state.users, action.payload],\n      };\n    case actionTypes.SIGNIN:\n      const findUser = state.users.find(\n        (user) =>\n          user.username === action.payload.username &&\n          user.password === action.payload.password\n      )\n        ? true\n        : false;\n\n      const filterUser = state.users.filter(\n        (user) =>\n          user.username === action.payload.username &&\n          user.password === action.payload.password\n      );\n\n      return {\n        ...state,\n        signinResponse: findUser,\n        signedUser: filterUser,\n      };\n\n    case actionTypes.SIGNOUT:\n      return {\n        ...state,\n        signinResponse: false,\n        signedUser: {}\n      };\n\n\n    case actionTypes.GET_BOOK:\n      return {\n        ...state,\n        books: action.payload,\n      };\n    case actionTypes.GET_BOOK_BY_ID:\n      return {\n        ...state,\n        book: action.payload,\n      };\n    case actionTypes.UPDATE_BOOK:\n      return {\n        ...state,\n      };\n    case actionTypes.DELETE_BOOK:\n      return {\n        ...state,\n      };\n    case actionTypes.ADD_TO_CART:\n      console.log(\"action.payload\", action.payload);\n      const filterProduct = state.books.filter((val) => val.id === action.payload.id);\n      filterProduct[0].qty = 1\n      return {\n        ...state,\n        booksInCart: [...state.booksInCart, filterProduct[0]],\n        //booksInCart: state.booksInCart.push(action.payload),\n      };\n    \n      case actionTypes.PLUS_ORDER:\n        return {\n          ...state,\n          totalOrder : state.totalOrder + 1\n        }\n\n       case actionTypes.MINUS_ORDER:\n        if(state.totalOrder > 0 ) {\n          return {\n            ...state,\n            totalOrder : state.totalOrder - 1\n          }\n        }\n    default:\n      return initialState;\n  }\n};\n\nexport default book;\n"]},"metadata":{},"sourceType":"module"}