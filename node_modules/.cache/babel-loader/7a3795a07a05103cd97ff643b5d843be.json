{"ast":null,"code":"import * as actionTypes from \"../action/actionTypes\";\nconst initialState = {\n  admin: {\n    username: \"admin\",\n    password: \"admin\"\n  },\n  users: [{\n    name: \"arnov\",\n    username: \"arnov\",\n    password: 'arnov',\n    saldo: 1000000\n  }],\n  signinResponse: false,\n  signedUser: {},\n  books: [],\n  book: {},\n  booksInCart: []\n};\n\nconst book = (state = initialState, action) => {\n  console.log(state.users, 'state useres');\n\n  switch (action.type) {\n    case actionTypes.SIGNUP:\n      return { ...state,\n        users: [...state.users, action.payload]\n      };\n\n    case actionTypes.SIGNIN:\n      const findUser = state.users.find(user => user.username === action.payload.username && user.password === action.payload.password) ? true : false;\n      const filterUser = state.users.filter(user => user.username === action.payload.username && user.password === action.payload.password);\n      return { ...state,\n        signinResponse: findUser,\n        signedUser: filterUser\n      };\n\n    case actionTypes.SIGNOUT:\n      return { ...state,\n        signinResponse: false,\n        signedUser: {}\n      };\n\n    case actionTypes.GET_BOOK:\n      return { ...state,\n        books: action.payload\n      };\n\n    case actionTypes.GET_BOOK_BY_ID:\n      return { ...state,\n        book: action.payload\n      };\n\n    case actionTypes.UPDATE_BOOK:\n      return { ...state\n      };\n\n    case actionTypes.DELETE_BOOK:\n      return { ...state\n      };\n\n    case actionTypes.ADD_TO_CART:\n      console.log(\"action.payload\", action.payload);\n      const temp = [];\n      const filterProduct = state.books.filter(val => val.id === action.payload.id);\n      filterProduct[0].qty = 1; //temp.pufilterProduct\n\n      return { ...state,\n        booksInCart: [...state.booksInCart, filterProduct[0]] // booksInCart: {...state.booksInCart, qty : 1},\n        //booksInCart: state.booksInCart.push(action.payload),\n\n      };\n\n    default:\n      return initialState;\n  }\n};\n\nexport default book;","map":{"version":3,"sources":["/home/kemosabe/Documents/sekolahfullstack/react/projectNext/src/redux/reducer/globalReducer.js"],"names":["actionTypes","initialState","admin","username","password","users","name","saldo","signinResponse","signedUser","books","book","booksInCart","state","action","console","log","type","SIGNUP","payload","SIGNIN","findUser","find","user","filterUser","filter","SIGNOUT","GET_BOOK","GET_BOOK_BY_ID","UPDATE_BOOK","DELETE_BOOK","ADD_TO_CART","temp","filterProduct","val","id","qty"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,uBAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,QAAQ,EAAE,OAAZ;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GADY;AAEnBC,EAAAA,KAAK,EAAE,CAAC;AAACC,IAAAA,IAAI,EAAE,OAAP;AAAgBH,IAAAA,QAAQ,EAAE,OAA1B;AAAmCC,IAAAA,QAAQ,EAAG,OAA9C;AAAuDG,IAAAA,KAAK,EAAG;AAA/D,GAAD,CAFY;AAGnBC,EAAAA,cAAc,EAAE,KAHG;AAInBC,EAAAA,UAAU,EAAE,EAJO;AAKnBC,EAAAA,KAAK,EAAE,EALY;AAMnBC,EAAAA,IAAI,EAAE,EANa;AAOnBC,EAAAA,WAAW,EAAE;AAPM,CAArB;;AAUA,MAAMD,IAAI,GAAG,CAACE,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkC;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACR,KAAlB,EAAyB,cAAzB;;AACA,UAAQS,MAAM,CAACG,IAAf;AACE,SAAKjB,WAAW,CAACkB,MAAjB;AACE,aAAO,EACL,GAAGL,KADE;AAELR,QAAAA,KAAK,EAAE,CAAC,GAAGQ,KAAK,CAACR,KAAV,EAAiBS,MAAM,CAACK,OAAxB;AAFF,OAAP;;AAIF,SAAKnB,WAAW,CAACoB,MAAjB;AACE,YAAMC,QAAQ,GAAGR,KAAK,CAACR,KAAN,CAAYiB,IAAZ,CACdC,IAAD,IACEA,IAAI,CAACpB,QAAL,KAAkBW,MAAM,CAACK,OAAP,CAAehB,QAAjC,IACAoB,IAAI,CAACnB,QAAL,KAAkBU,MAAM,CAACK,OAAP,CAAef,QAHpB,IAKb,IALa,GAMb,KANJ;AAQA,YAAMoB,UAAU,GAAGX,KAAK,CAACR,KAAN,CAAYoB,MAAZ,CAChBF,IAAD,IACEA,IAAI,CAACpB,QAAL,KAAkBW,MAAM,CAACK,OAAP,CAAehB,QAAjC,IACAoB,IAAI,CAACnB,QAAL,KAAkBU,MAAM,CAACK,OAAP,CAAef,QAHlB,CAAnB;AAMA,aAAO,EACL,GAAGS,KADE;AAELL,QAAAA,cAAc,EAAEa,QAFX;AAGLZ,QAAAA,UAAU,EAAEe;AAHP,OAAP;;AAMF,SAAKxB,WAAW,CAAC0B,OAAjB;AACE,aAAO,EACL,GAAGb,KADE;AAELL,QAAAA,cAAc,EAAE,KAFX;AAGLC,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAOF,SAAKT,WAAW,CAAC2B,QAAjB;AACE,aAAO,EACL,GAAGd,KADE;AAELH,QAAAA,KAAK,EAAEI,MAAM,CAACK;AAFT,OAAP;;AAIF,SAAKnB,WAAW,CAAC4B,cAAjB;AACE,aAAO,EACL,GAAGf,KADE;AAELF,QAAAA,IAAI,EAAEG,MAAM,CAACK;AAFR,OAAP;;AAIF,SAAKnB,WAAW,CAAC6B,WAAjB;AACE,aAAO,EACL,GAAGhB;AADE,OAAP;;AAGF,SAAKb,WAAW,CAAC8B,WAAjB;AACE,aAAO,EACL,GAAGjB;AADE,OAAP;;AAGF,SAAKb,WAAW,CAAC+B,WAAjB;AACEhB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,MAAM,CAACK,OAArC;AACA,YAAMa,IAAI,GAAG,EAAb;AACA,YAAMC,aAAa,GAAGpB,KAAK,CAACH,KAAN,CAAYe,MAAZ,CAAoBS,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWrB,MAAM,CAACK,OAAP,CAAegB,EAAtD,CAAtB;AACAF,MAAAA,aAAa,CAAC,CAAD,CAAb,CAAiBG,GAAjB,GAAuB,CAAvB,CAJF,CAKE;;AACA,aAAO,EACL,GAAGvB,KADE;AAELD,QAAAA,WAAW,EAAE,CAAC,GAAGC,KAAK,CAACD,WAAV,EAAuBqB,aAAa,CAAC,CAAD,CAApC,CAFR,CAGL;AACA;;AAJK,OAAP;;AAMF;AACE,aAAOhC,YAAP;AAlEJ;AAoED,CAtED;;AAwEA,eAAeU,IAAf","sourcesContent":["import * as actionTypes from \"../action/actionTypes\";\n\nconst initialState = {\n  admin: { username: \"admin\", password: \"admin\" },\n  users: [{name: \"arnov\", username: \"arnov\", password : 'arnov', saldo : 1000000}],\n  signinResponse: false,\n  signedUser: {},\n  books: [],\n  book: {},\n  booksInCart: [],\n};\n\nconst book = (state = initialState, action) => {\n  console.log(state.users, 'state useres')\n  switch (action.type) {\n    case actionTypes.SIGNUP:\n      return {\n        ...state,\n        users: [...state.users, action.payload],\n      };\n    case actionTypes.SIGNIN:\n      const findUser = state.users.find(\n        (user) =>\n          user.username === action.payload.username &&\n          user.password === action.payload.password\n      )\n        ? true\n        : false;\n\n      const filterUser = state.users.filter(\n        (user) =>\n          user.username === action.payload.username &&\n          user.password === action.payload.password\n      );\n\n      return {\n        ...state,\n        signinResponse: findUser,\n        signedUser: filterUser,\n      };\n\n    case actionTypes.SIGNOUT:\n      return {\n        ...state,\n        signinResponse: false,\n        signedUser: {}\n      };\n\n\n    case actionTypes.GET_BOOK:\n      return {\n        ...state,\n        books: action.payload,\n      };\n    case actionTypes.GET_BOOK_BY_ID:\n      return {\n        ...state,\n        book: action.payload,\n      };\n    case actionTypes.UPDATE_BOOK:\n      return {\n        ...state,\n      };\n    case actionTypes.DELETE_BOOK:\n      return {\n        ...state,\n      };\n    case actionTypes.ADD_TO_CART:\n      console.log(\"action.payload\", action.payload);\n      const temp = []\n      const filterProduct = state.books.filter((val) => val.id === action.payload.id);\n      filterProduct[0].qty = 1\n      //temp.pufilterProduct\n      return {\n        ...state,\n        booksInCart: [...state.booksInCart, filterProduct[0]],\n        // booksInCart: {...state.booksInCart, qty : 1},\n        //booksInCart: state.booksInCart.push(action.payload),\n      };\n    default:\n      return initialState;\n  }\n};\n\nexport default book;\n"]},"metadata":{},"sourceType":"module"}