{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nimport { ENDPOINT, access_token } from \"../../utils/global/index\";\nexport const signin = data => {\n  return {\n    type: actionTypes.SIGNIN,\n    payload: data\n  };\n};\nexport const signup = data => {\n  return {\n    type: actionTypes.SIGNUP,\n    payload: data\n  };\n};\nexport const signout = () => {\n  return {\n    type: actionTypes.SIGNOUT,\n    payload: null\n  };\n};\nexport const addToCart = book => {\n  console.log(\"actionTypes.ADD_TO_CART\", actionTypes.ADD_TO_CART);\n  return {\n    type: actionTypes.ADD_TO_CART,\n    payload: book\n  };\n};\nexport const getListBook = () => {\n  const request = axios.get(`${ENDPOINT}/book/findAll`, {\n    headers: {\n      Authorization: `Bearer ${access_token}`\n    }\n  });\n  return dispatch => {\n    request.then(response => {\n      console.log(response);\n      return dispatch({\n        type: actionTypes.GET_BOOK,\n        payload: response.data\n      });\n    });\n  };\n}; // get book by id\n\nexport const getBookById = id => {\n  // http request\n  const request = axios.get(`${ENDPOINT}/book/findById/${id}`, {\n    headers: {\n      Authorization: `Bearer ${access_token}`\n    }\n  }); // redux thunk untuk dispatch\n\n  return dispatch => {\n    request.then(response => {\n      return dispatch({\n        type: actionTypes.GET_BOOK_BY_ID,\n        payload: response.data\n      });\n    });\n  };\n};\nexport const updateBook = data => {\n  const request = axios.post(`${ENDPOINT}/book/update`, data, {\n    headers: {\n      Authorization: `Bearer ${access_token}`\n    }\n  });\n  return dispatch => {\n    request.then(response => {\n      dispatch({\n        type: actionTypes.UPDATE_BOOK,\n        payload: response.data\n      });\n      return dispatch(getListBook());\n    });\n  };\n};\nexport const deleteBook = id => {\n  const request = axios.delete(`${ENDPOINT}/book/deleteById/${id}`, {\n    headers: {\n      Authorization: `Bearer ${access_token}`\n    }\n  });\n  return dispatch => {\n    request.then(response => {\n      dispatch({\n        type: actionTypes.DELETE_BOOK,\n        payload: response.data\n      });\n    });\n    return dispatch(getListBook());\n  };\n};","map":{"version":3,"sources":["/home/kemosabe/Documents/sekolahfullstack/react/projectNext/src/redux/action/globalActionType.js"],"names":["actionTypes","axios","ENDPOINT","access_token","signin","data","type","SIGNIN","payload","signup","SIGNUP","signout","SIGNOUT","addToCart","book","console","log","ADD_TO_CART","getListBook","request","get","headers","Authorization","dispatch","then","response","GET_BOOK","getBookById","id","GET_BOOK_BY_ID","updateBook","post","UPDATE_BOOK","deleteBook","delete","DELETE_BOOK"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nimport { ENDPOINT, access_token } from \"../../utils/global/index\";\n\nexport const signin = (data) => {\n  return {\n    type : actionTypes.SIGNIN,\n    payload : data\n  }\n}\n\nexport const signup = (data) => {\n  return {\n    type : actionTypes.SIGNUP,\n    payload : data\n  }\n}\n\nexport const signout = () => {\n  return {\n    type : actionTypes.SIGNOUT,\n    payload : null\n  }\n}\n\nexport const addToCart = (book) => {\n  console.log(\"actionTypes.ADD_TO_CART\", actionTypes.ADD_TO_CART);\n  return {\n    type: actionTypes.ADD_TO_CART,\n    payload: book,\n  };\n};\n\nexport const getListBook = () => {\n  const request = axios.get(`${ENDPOINT}/book/findAll`, {\n    headers: {\n      Authorization: `Bearer ${access_token}`,\n    },\n  });\n\n  return (dispatch) => {\n    request.then((response) => {\n      console.log(response);\n      return dispatch({\n        type: actionTypes.GET_BOOK,\n        payload: response.data,\n      });\n    });\n  };\n};\n\n// get book by id\nexport const getBookById = (id) => {\n  // http request\n  const request = axios.get(`${ENDPOINT}/book/findById/${id}`, {\n    headers: {\n      Authorization: `Bearer ${access_token}`,\n    },\n  });\n\n  // redux thunk untuk dispatch\n  return (dispatch) => {\n    request.then((response) => {\n      return dispatch({\n        type: actionTypes.GET_BOOK_BY_ID,\n        payload: response.data,\n      });\n    });\n  };\n};\n\nexport const updateBook = (data) => {\n  const request = axios.post(`${ENDPOINT}/book/update`, data, {\n    headers: {\n      Authorization: `Bearer ${access_token}`,\n    },\n  });\n\n  return (dispatch) => {\n    request.then((response) => {\n      dispatch({\n        type: actionTypes.UPDATE_BOOK,\n        payload: response.data,\n      });\n\n      return dispatch(getListBook());\n    });\n  };\n};\n\nexport const deleteBook = (id) => {\n  const request = axios.delete(`${ENDPOINT}/book/deleteById/${id}`, {\n    headers: {\n      Authorization: `Bearer ${access_token}`,\n    },\n  });\n\n  return (dispatch) => {\n    request.then((response) => {\n      dispatch({\n        type: actionTypes.DELETE_BOOK,\n        payload: response.data,\n      });\n    });\n\n    return dispatch(getListBook());\n  };\n};\n"]},"metadata":{},"sourceType":"module"}