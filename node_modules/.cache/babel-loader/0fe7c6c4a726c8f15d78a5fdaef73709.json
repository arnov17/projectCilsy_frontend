{"ast":null,"code":"import * as actionTypes from \"../action/actionTypes\";\nconst initialState = {\n  admin: {\n    username: \"admin\",\n    password: \"admin\"\n  },\n  users: [{\n    name: \"arnov\",\n    username: \"arnov\",\n    password: 'arnov',\n    saldo: 1000000\n  }],\n  signinResponse: false,\n  signedUser: {},\n  books: [],\n  book: {},\n  booksInCart: [],\n  totalOrder: 1,\n  PriceCart: 0\n};\n\nconst book = (state = initialState, action) => {\n  console.log(state.users, 'state useres');\n\n  switch (action.type) {\n    case actionTypes.SIGNUP:\n      return { ...state,\n        users: [...state.users, action.payload]\n      };\n\n    case actionTypes.PRICE_CART:\n      return { ...state,\n        PriceCart: action.payload\n      };\n\n    case actionTypes.SIGNIN:\n      const findUser = state.users.find(user => user.username === action.payload.username && user.password === action.payload.password) ? true : false;\n      const filterUser = state.users.filter(user => user.username === action.payload.username && user.password === action.payload.password);\n      return { ...state,\n        signinResponse: findUser,\n        signedUser: filterUser\n      };\n\n    case actionTypes.SIGNOUT:\n      return { ...state,\n        signinResponse: false,\n        signedUser: {}\n      };\n\n    case actionTypes.GET_BOOK:\n      return { ...state,\n        books: action.payload\n      };\n\n    case actionTypes.GET_BOOK_BY_ID:\n      return { ...state,\n        book: action.payload\n      };\n\n    case actionTypes.UPDATE_BOOK:\n      return { ...state\n      };\n\n    case actionTypes.DELETE_BOOK:\n      return { ...state\n      };\n\n    case actionTypes.ADD_TO_CART:\n      console.log(\"action.payload\", action.payload);\n      const filterProduct = state.books.filter(val => val.id === action.payload.id);\n      filterProduct[0].qty = 1;\n      return { ...state,\n        booksInCart: [...state.booksInCart, filterProduct[0]] //booksInCart: state.booksInCart.push(action.payload),\n\n      };\n\n    case actionTypes.PLUS_ORDER:\n      console.log(\"action.payload qty\", action.payload);\n      return { ...state,\n        totalOrder: state.totalOrder + 1\n      };\n\n    case actionTypes.MINUS_ORDER:\n      if (state.totalOrder > 0) {\n        return { ...state,\n          totalOrder: state.totalOrder - 1\n        };\n      }\n\n    default:\n      return initialState;\n  }\n};\n\nexport default book;","map":{"version":3,"sources":["/home/kemosabe/Documents/sekolahfullstack/react/projectNext/src/redux/reducer/globalReducer.js"],"names":["actionTypes","initialState","admin","username","password","users","name","saldo","signinResponse","signedUser","books","book","booksInCart","totalOrder","PriceCart","state","action","console","log","type","SIGNUP","payload","PRICE_CART","SIGNIN","findUser","find","user","filterUser","filter","SIGNOUT","GET_BOOK","GET_BOOK_BY_ID","UPDATE_BOOK","DELETE_BOOK","ADD_TO_CART","filterProduct","val","id","qty","PLUS_ORDER","MINUS_ORDER"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../action/actionTypes\";\n\nconst initialState = {\n  admin: { username: \"admin\", password: \"admin\" },\n  users: [{name: \"arnov\", username: \"arnov\", password : 'arnov', saldo : 1000000}],\n  signinResponse: false,\n  signedUser: {},\n  books: [],\n  book: {},\n  booksInCart: [],\n  totalOrder : 1,\n  PriceCart : 0\n};\n\nconst book = (state = initialState, action) => {\n  console.log(state.users, 'state useres')\n  switch (action.type) {\n    case actionTypes.SIGNUP:\n      return {\n        ...state,\n        users: [...state.users, action.payload],\n      };\n    \n    case actionTypes.PRICE_CART :\n      return {\n        ...state,\n        PriceCart : action.payload\n      }\n    case actionTypes.SIGNIN:\n      const findUser = state.users.find(\n        (user) =>\n          user.username === action.payload.username &&\n          user.password === action.payload.password\n      )\n        ? true\n        : false;\n\n      const filterUser = state.users.filter(\n        (user) =>\n          user.username === action.payload.username &&\n          user.password === action.payload.password\n      );\n\n      return {\n        ...state,\n        signinResponse: findUser,\n        signedUser: filterUser,\n      };\n\n    case actionTypes.SIGNOUT:\n      return {\n        ...state,\n        signinResponse: false,\n        signedUser: {}\n      };\n\n\n    case actionTypes.GET_BOOK:\n      return {\n        ...state,\n        books: action.payload,\n      };\n    case actionTypes.GET_BOOK_BY_ID:\n      return {\n        ...state,\n        book: action.payload,\n      };\n    case actionTypes.UPDATE_BOOK:\n      return {\n        ...state,\n      };\n    case actionTypes.DELETE_BOOK:\n      return {\n        ...state,\n      };\n    case actionTypes.ADD_TO_CART:\n      console.log(\"action.payload\", action.payload);\n      const filterProduct = state.books.filter((val) => val.id === action.payload.id);\n      filterProduct[0].qty = 1\n      return {\n        ...state,\n        booksInCart: [...state.booksInCart, filterProduct[0]],\n        //booksInCart: state.booksInCart.push(action.payload),\n      };\n    \n      case actionTypes.PLUS_ORDER:\n        console.log(\"action.payload qty\", action.payload);\n        return {\n          ...state,\n          totalOrder : state.totalOrder + 1\n        }\n        \n       case actionTypes.MINUS_ORDER:\n        if(state.totalOrder > 0 ) {\n          return {\n            ...state,\n            totalOrder : state.totalOrder - 1\n          }\n        }\n    default:\n      return initialState;\n  }\n};\n\nexport default book;\n"]},"metadata":{},"sourceType":"module"}