{"ast":null,"code":"import * as actionTypes from \"../action/actionTypes\";\nconst initialState = {\n  admin: {\n    username: \"admin\",\n    password: \"admin\"\n  },\n  users: [{\n    name: \"arnov\",\n    username: \"arnov\",\n    password: 'arnov',\n    saldo: 1000000\n  }],\n  signinResponse: false,\n  signedUser: {},\n  books: [],\n  book: {},\n  booksInCart: [],\n  totalOrder: 1,\n  PriceCart: 0\n};\n\nconst book = (state = initialState, action) => {\n  // console.log(state.users, 'state useres')\n  switch (action.type) {\n    case actionTypes.SIGNUP:\n      return { ...state,\n        users: [...state.users, action.payload]\n      };\n\n    case actionTypes.PRICE_CART:\n      return { ...state,\n        PriceCart: action.payload\n      };\n\n    case actionTypes.SIGNIN:\n      const findUser = state.users.find(user => user.username === action.payload.username && user.password === action.payload.password) ? true : false;\n      const filterUser = state.users.filter(user => user.username === action.payload.username && user.password === action.payload.password);\n      return { ...state,\n        signinResponse: findUser,\n        signedUser: filterUser\n      };\n\n    case actionTypes.SIGNOUT:\n      return { ...state,\n        signinResponse: false,\n        signedUser: {},\n        booksInCart: []\n      };\n\n    case actionTypes.GET_BOOK:\n      return { ...state,\n        books: action.payload\n      };\n\n    case actionTypes.GET_BOOK_BY_ID:\n      return { ...state,\n        book: action.payload\n      };\n\n    case actionTypes.UPDATE_BOOK:\n      return { ...state\n      };\n\n    case actionTypes.DELETE_BOOK:\n      return { ...state\n      };\n\n    case actionTypes.ADD_TO_CART:\n      // console.log(\"action.payload\", action.payload);\n      // const filterProduct = state.books.filter((val) => val.id === action.payload.id);\n      // filterProduct[0].qty = 1\n      const indexAddCart = state.books.findIndex(val => val.id === action.payload.id);\n\n      if (indexAddCart >= 0) {\n        books[indexAddCart].qty = state.book[indexAddCart].qty + 1;\n      } else {\n        const filterProduct = state.books.filter(val => val.id === action.payload.id);\n        filterProduct[0].qty = 1;\n      }\n\n      return { ...state,\n        booksInCart: [...state.booksInCart, filterProduct[0]] //booksInCart: state.booksInCart.push(action.payload),\n\n      };\n\n    case actionTypes.PLUS_ORDER:\n      const index = state.booksInCart.findIndex(val => val.id === action.payload);\n      const newBooksInCart = state.booksInCart;\n      newBooksInCart[index].qty = newBooksInCart[index].qty + 1; // console.log(\"action.payload qty\", action.payload);\n\n      return { ...state,\n        booksInCart: newBooksInCart\n      };\n\n    case actionTypes.MINUS_ORDER:\n      if (state.totalOrder > 0) {\n        return { ...state,\n          booksInCart: state.booksInCart.qty + 1\n        };\n      }\n\n    default:\n      return initialState;\n  }\n};\n\nexport default book;","map":{"version":3,"sources":["/home/kemosabe/Documents/sekolahfullstack/react/projectNext/src/redux/reducer/globalReducer.js"],"names":["actionTypes","initialState","admin","username","password","users","name","saldo","signinResponse","signedUser","books","book","booksInCart","totalOrder","PriceCart","state","action","type","SIGNUP","payload","PRICE_CART","SIGNIN","findUser","find","user","filterUser","filter","SIGNOUT","GET_BOOK","GET_BOOK_BY_ID","UPDATE_BOOK","DELETE_BOOK","ADD_TO_CART","indexAddCart","findIndex","val","id","qty","filterProduct","PLUS_ORDER","index","newBooksInCart","MINUS_ORDER"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../action/actionTypes\";\n\nconst initialState = {\n  admin: { username: \"admin\", password: \"admin\" },\n  users: [{name: \"arnov\", username: \"arnov\", password : 'arnov', saldo : 1000000}],\n  signinResponse: false,\n  signedUser: {},\n  books: [],\n  book: {},\n  booksInCart: [],\n  totalOrder : 1,\n  PriceCart : 0\n};\n\nconst book = (state = initialState, action) => {\n  // console.log(state.users, 'state useres')\n  switch (action.type) {\n    case actionTypes.SIGNUP:\n      return {\n        ...state,\n        users: [...state.users, action.payload],\n      };\n    \n    case actionTypes.PRICE_CART :\n      return {\n        ...state,\n        PriceCart : action.payload\n      }\n    case actionTypes.SIGNIN:\n      const findUser = state.users.find(\n        (user) =>\n          user.username === action.payload.username &&\n          user.password === action.payload.password\n      )\n        ? true\n        : false;\n\n      const filterUser = state.users.filter(\n        (user) =>\n          user.username === action.payload.username &&\n          user.password === action.payload.password\n      );\n\n      return {\n        ...state,\n        signinResponse: findUser,\n        signedUser: filterUser,\n      };\n\n    case actionTypes.SIGNOUT:\n      return {\n        ...state,\n        signinResponse: false,\n        signedUser: {},\n        booksInCart: []\n      };\n\n\n    case actionTypes.GET_BOOK:\n      return {\n        ...state,\n        books: action.payload,\n      };\n    case actionTypes.GET_BOOK_BY_ID:\n      return {\n        ...state,\n        book: action.payload,\n      };\n    case actionTypes.UPDATE_BOOK:\n      return {\n        ...state,\n      };\n    case actionTypes.DELETE_BOOK:\n      return {\n        ...state,\n      };\n    case actionTypes.ADD_TO_CART:\n      // console.log(\"action.payload\", action.payload);\n    // const filterProduct = state.books.filter((val) => val.id === action.payload.id);\n    // filterProduct[0].qty = 1\n    const indexAddCart = state.books.findIndex((val) => val.id === action.payload.id)\n    if(indexAddCart >= 0) {\n      books[indexAddCart].qty = state.book[indexAddCart].qty + 1\n    } else {\n      const filterProduct = state.books.filter((val) => val.id === action.payload.id);\n      filterProduct[0].qty = 1\n    }\n    return {\n      ...state,\n      booksInCart: [...state.booksInCart, filterProduct[0]],\n      //booksInCart: state.booksInCart.push(action.payload),\n      };\n    \n    case actionTypes.PLUS_ORDER:\n      const index = state.booksInCart.findIndex(val => val.id === action.payload)\n      const newBooksInCart = state.booksInCart\n      newBooksInCart[index].qty = newBooksInCart[index].qty + 1\n      // console.log(\"action.payload qty\", action.payload);\n      return {\n        ...state,\n        booksInCart : newBooksInCart\n      }\n        \n      case actionTypes.MINUS_ORDER:\n      if(state.totalOrder > 0 ) {\n        return {\n          ...state,\n          booksInCart : state.booksInCart.qty + 1\n          }\n      }\n    default:\n      return initialState;\n  }\n};\n\nexport default book;\n"]},"metadata":{},"sourceType":"module"}