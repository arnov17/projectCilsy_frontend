{"ast":null,"code":"var _jsxFileName = \"/home/kemosabe/Documents/sekolahfullstack/react/projectNext/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { combineReducers, compose, createStore, applyMiddleware } from 'redux';\nimport books from './redux/reducer/globalReducer';\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nconst rootReducer = combineReducers({\n  bookReducer: books\n});\n\nconst logger = store => {\n  return next => {\n    return action => {\n      console.log('[Middleware] Dispatching', action);\n      const result = next(action);\n      console.log('[Middleware next state]', store.getState());\n      return result;\n    };\n  };\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }\n})))), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/kemosabe/Documents/sekolahfullstack/react/projectNext/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","BrowserRouter","combineReducers","compose","createStore","applyMiddleware","books","thunk","Provider","rootReducer","bookReducer","logger","store","next","action","console","log","result","getState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,EAAgDC,eAAhD,QAAuE,OAAvE;AAEA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,MAAMC,WAAW,GAAGP,eAAe,CAAC;AAClCQ,EAAAA,WAAW,EAAEJ;AADqB,CAAD,CAAnC;;AAIA,MAAMK,MAAM,GAAIC,KAAD,IAAW;AACxB,SAAQC,IAAD,IAAU;AACf,WAAQC,MAAD,IAAY;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,MAAxC;AACA,YAAMG,MAAM,GAAGJ,IAAI,CAACC,MAAD,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCJ,KAAK,CAACM,QAAN,EAAvC;AACA,aAAOD,MAAP;AACD,KALD;AAMD,GAPD;AAQD,CATD;;AAWA,MAAME,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+ClB,OAAxE;AAEA,MAAMS,KAAK,GAAGR,WAAW,CACvBK,WADuB,EAEvBU,gBAAgB,CAACd,eAAe,CAACM,MAAD,EAASJ,KAAT,CAAhB,CAFO,CAAzB;AAKAT,QAAQ,CAACwB,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,CADF,EAQEW,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF,E,CAWA;AACA;AACA;;AACAxB,aAAa,CAACyB,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { combineReducers, compose, createStore, applyMiddleware } from 'redux';\n\nimport books from './redux/reducer/globalReducer'\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\n\nconst rootReducer = combineReducers({\n  bookReducer: books\n});\n\nconst logger = (store) => {\n  return (next) => {\n    return (action) => {\n      console.log('[Middleware] Dispatching', action)\n      const result = next(action)\n      console.log('[Middleware next state]', store.getState())\n      return result\n    }\n  }\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(logger, thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}